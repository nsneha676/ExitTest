{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PlaygroundService = /*#__PURE__*/(() => {\n  class PlaygroundService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    composeTweet(UserID, Message) {\n      const newTweetObject = Object.assign({}, {\n        UserID,\n        Message\n      });\n      return this.http.post(`${environment.apiUrl}/user/newTweet`, newTweetObject);\n    }\n\n    getAllTweets(userId) {\n      return this.http.get(`${environment.apiUrl}/user/playground/${userId}`);\n    } // deleteTweet(UserID:String,MessageID:String){\n    //   const DeleteTweetObject = Object.assign({}, {UserID,MessageID});\n    //   return this.http.delete(`${environment.apiUrl}/user/deletetweet`,DeleteTweetObject)\n    // }\n\n\n    editTweet(UserID, Message, TweetID) {\n      const EditTweetObject = Object.assign({}, {\n        UserID,\n        Message,\n        TweetID\n      });\n      return this.http.put(`${environment.apiUrl}/user/updatetweet`, EditTweetObject);\n    }\n\n    deleteTweet(UserID, TweetID) {\n      return this.http.delete(`${environment.apiUrl}/user/deletetweet/${UserID}/${TweetID}`);\n    }\n\n  }\n\n  PlaygroundService.ɵfac = function PlaygroundService_Factory(t) {\n    return new (t || PlaygroundService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PlaygroundService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PlaygroundService,\n    factory: PlaygroundService.ɵfac,\n    providedIn: 'root'\n  });\n  return PlaygroundService;\n})();","map":null,"metadata":{},"sourceType":"module"}